#!/bin/bash

VBM=`which VBoxManage`
if [ "x$VBM" == "x" ]
then
  echo "VBoxManage could not be found in the path. Exiting..."
  exit 1
fi

VMNAME="amazon"
MEMSIZE="1024"

shift $((OPTIND-1))
[ "${1:-}" = "--" ] && shift

case "$1" in
  genseed)
    SEED=$2
    if [ "x$SEED" == "x" ]
    then
      echo "Usage $0 $1 seed.iso"
      exit 1
    fi
    cat <<EOF > /tmp/user-data
#cloud-config
#vim:syntax=yaml
users:
  - name: vagrant
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
    - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key
chpasswd:
  list: |
    vagrant:vagrant
runcmd:
  - /bin/sed -i '/UseDNS/cUseDNS no' /etc/ssh/sshd_config
EOF
    touch /tmp/meta-data
    genisoimage -output "$SEED" -volid cidata -joliet -rock /tmp/user-data /tmp/meta-data
    rm -f /tmp/user-data /tmp/meta-data
  ;;

  create)
    VBoxManage createvm --name "$VMNAME" --ostype "RedHat_64" --register

    VMCFG="`VBoxManage showvminfo "$VMNAME" --machinereadable | grep CfgFile= | sed 's/^CfgFile=//;s/"//g'`"
    VMBASE=`dirname "$VMCFG"`

    VBoxManage storagectl "$VMNAME" --name "IDE" --add ide
    VBoxManage storageattach "$VMNAME" --storagectl "IDE" --port 1 --device 0 --type dvddrive --medium emptydrive
    VBoxManage storagectl "$VMNAME" --name "SATA" --add sata --controller IntelAHCI --portcount 16

    VBoxManage modifyvm "$VMNAME" --firmware bios
    VBoxManage modifyvm "$VMNAME" --rtcuseutc on
    VBoxManage modifyvm "$VMNAME" --audio-enabled off
    VBoxManage modifyvm "$VMNAME" --boot1 dvd --boot2 disk --boot3 none --boot4 none
    VBoxManage modifyvm "$VMNAME" --memory $MEMSIZE --vram 64
    VBoxManage modifyvm "$VMNAME" --nic1 nat

    VBoxManage modifyvm "$VMNAME" --usb on --usbehci on  # USB 2.0
    VBoxManage modifyvm "$VMNAME" --graphicscontroller vmsvga
  ;;

  attach)
    AMZNVDI=$2
    if [ "x$AMZNVDI" == "x" ]
    then
      echo "Usage $0 $1 amzn.vdi"
      exit 1
    fi

    VMCFG="`VBoxManage showvminfo "$VMNAME" --machinereadable | grep CfgFile= | sed 's/^CfgFile=//;s/"//g'`"
    VMBASE=`dirname "$VMCFG"`

    cp "$AMZNVDI" "$VMBASE/$VMNAME.vdi"
    VBoxManage storageattach "$VMNAME" --storagectl "SATA" --port 0 --device 0 --type hdd --medium "$VMBASE/$VMNAME.vdi"
  ;;

  start)
    SEED=$2
    if [ "x$SEED" == "x" ]
    then
      echo "Usage $0 $1 seed.iso"
      exit 1
    fi
    VBoxManage storageattach "$VMNAME" --storagectl "IDE" --port 1 --device 0 --type dvddrive --medium "$SEED"
    VBoxManage startvm "$VMNAME" --type headless
  ;;

  package)
    VBoxManage controlvm "$VMNAME" acpipowerbutton
    RESULT=$?
    if [ $RESULT != 1 ]
    then
      # RESULT=1 when already down so machine is running, wait to poweroff before continuing.
      echo "Waiting for $VMNAME to poweroff"
      sleep 30
    fi
    VBoxManage storageattach "$VMNAME" --storagectl "IDE" --port 1 --device 0 --type dvddrive --medium emptydrive
    if [ -f "$VMNAME"-virtualbox.box ]
    then
      rm -f "$VMNAME"-virtualbox.box
    fi
    echo 'Vagrant.configure(2) do |config|' > "$VMNAME"-Vagrantfile
    echo '  config.vm.synced_folder ".", "/home/vagrant/sync", type: "rsync", disabled: true' >> "$VMNAME"-Vagrantfile
    echo '  config.vm.synced_folder ".", "/vagrant", disabled: true' >> "$VMNAME"-Vagrantfile
    echo 'end' >> "$VMNAME"-Vagrantfile

    vagrant package --base "$VMNAME" --output "$VMNAME"-virtualbox.box --vagrantfile "$VMNAME"-Vagrantfile

    rm "$VMNAME"-Vagrantfile
  ;;

  remove)
    VBoxManage controlvm "$VMNAME" poweroff
    VBoxManage unregistervm "$VMNAME" --delete
  ;;

  *)
    echo "Usage: $0 {genseed|create|attach|start|package|remove}"
    exit 2
  ;;
esac
